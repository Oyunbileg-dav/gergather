{"ast":null,"code":"import { SET_SCREAMS, LOADING_DATA, DELETE_SCREAM, SET_ERRORS, POST_SCREAM, CLEAR_ERRORS, LOADING_UI, SET_SCREAM, STOP_LOADING_UI } from '../reducers/types';\nimport axios from 'axios'; // Get all screams\n\nexport const getScreams = () => dispatch => {\n  dispatch({\n    type: LOADING_DATA\n  });\n  axios.get('/screams').then(res => {\n    dispatch({\n      type: SET_SCREAMS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: SET_SCREAMS,\n      payload: []\n    });\n  });\n};\nexport const getScream = screamId => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.get(`/scream/${screamId}`).then(res => {\n    dispatch({\n      type: SET_SCREAM,\n      payload: res.data\n    });\n    dispatch({\n      type: STOP_LOADING_UI\n    });\n  }).catch(err => console.log(err));\n}; // Post a scream\n\nexport const postScream = newScream => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.post('/scream', newScream).then(res => {\n    dispatch({\n      type: POST_SCREAM,\n      payload: res.data\n    });\n    dispatch(clearErrors());\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n}; // Like a scream\n\nexport const likeScream = screamId => dispatch => {\n  axios.get(`/scream/${screamId}/like`).then(res => {\n    dispatch({\n      type: LIKE_SCREAM,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n}; // Unlike a scream\n\nexport const unlikeScream = screamId => dispatch => {\n  axios.get(`/scream/${screamId}/unlike`).then(res => {\n    dispatch({\n      type: UNLIKE_SCREAM,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n}; // Submit a comment\n\nexport const submitComment = (screamId, commentData) => dispatch => {\n  axios.post(`/scream/${screamId}/comment`, commentData).then(res => {\n    dispatch({\n      type: SUBMIT_COMMENT,\n      payload: res.data\n    });\n    dispatch(clearErrors());\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const deleteScream = screamId => dispatch => {\n  axios.delete(`/scream/${screamId}`).then(() => {\n    dispatch({\n      type: DELETE_SCREAM,\n      payload: screamId\n    });\n  }).catch(err => console.log(err));\n};\nexport const getUserData = userHandle => dispatch => {\n  dispatch({\n    type: LOADING_DATA\n  });\n  axios.get(`/user/${userHandle}`).then(res => {\n    dispatch({\n      type: SET_SCREAMS,\n      payload: res.data.screams\n    });\n  }).catch(() => {\n    dispatch({\n      type: SET_SCREAMS,\n      payload: null\n    });\n  });\n};\nexport const clearErrors = () => dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"sources":["/Users/oyunbilegdavaanyam/Desktop/act2021-team3/src/redux/actions/dataActions.js"],"names":["SET_SCREAMS","LOADING_DATA","DELETE_SCREAM","SET_ERRORS","POST_SCREAM","CLEAR_ERRORS","LOADING_UI","SET_SCREAM","STOP_LOADING_UI","axios","getScreams","dispatch","type","get","then","res","payload","data","catch","err","getScream","screamId","console","log","postScream","newScream","post","clearErrors","response","likeScream","LIKE_SCREAM","unlikeScream","UNLIKE_SCREAM","submitComment","commentData","SUBMIT_COMMENT","deleteScream","delete","getUserData","userHandle","screams"],"mappings":"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","sourcesContent":["import {\n    SET_SCREAMS,\n    LOADING_DATA,\n    DELETE_SCREAM,\n    SET_ERRORS,\n    POST_SCREAM,\n    CLEAR_ERRORS,\n    LOADING_UI,\n    SET_SCREAM,\n    STOP_LOADING_UI\n  } from '../reducers/types';\n  import axios from 'axios';\n  \n  // Get all screams\n  export const getScreams = () => (dispatch) => {\n    dispatch({ type: LOADING_DATA });\n    axios\n      .get('/screams')\n      .then((res) => {\n        dispatch({\n          type: SET_SCREAMS,\n          payload: res.data\n        });\n      })\n      .catch((err) => {\n        dispatch({\n          type: SET_SCREAMS,\n          payload: []\n        });\n      });\n  };\n  export const getScream = (screamId) => (dispatch) => {\n    dispatch({ type: LOADING_UI });\n    axios\n      .get(`/scream/${screamId}`)\n      .then((res) => {\n        dispatch({\n          type: SET_SCREAM,\n          payload: res.data\n        });\n        dispatch({ type: STOP_LOADING_UI });\n      })\n      .catch((err) => console.log(err));\n  };\n  // Post a scream\n  export const postScream = (newScream) => (dispatch) => {\n    dispatch({ type: LOADING_UI });\n    axios\n      .post('/scream', newScream)\n      .then((res) => {\n        dispatch({\n          type: POST_SCREAM,\n          payload: res.data\n        });\n        dispatch(clearErrors());\n      })\n      .catch((err) => {\n        dispatch({\n          type: SET_ERRORS,\n          payload: err.response.data\n        });\n      });\n  };\n  // Like a scream\n  export const likeScream = (screamId) => (dispatch) => {\n    axios\n      .get(`/scream/${screamId}/like`)\n      .then((res) => {\n        dispatch({\n          type: LIKE_SCREAM,\n          payload: res.data\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n  // Unlike a scream\n  export const unlikeScream = (screamId) => (dispatch) => {\n    axios\n      .get(`/scream/${screamId}/unlike`)\n      .then((res) => {\n        dispatch({\n          type: UNLIKE_SCREAM,\n          payload: res.data\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n  // Submit a comment\n  export const submitComment = (screamId, commentData) => (dispatch) => {\n    axios\n      .post(`/scream/${screamId}/comment`, commentData)\n      .then((res) => {\n        dispatch({\n          type: SUBMIT_COMMENT,\n          payload: res.data\n        });\n        dispatch(clearErrors());\n      })\n      .catch((err) => {\n        dispatch({\n          type: SET_ERRORS,\n          payload: err.response.data\n        });\n      });\n  };\n  export const deleteScream = (screamId) => (dispatch) => {\n    axios\n      .delete(`/scream/${screamId}`)\n      .then(() => {\n        dispatch({ type: DELETE_SCREAM, payload: screamId });\n      })\n      .catch((err) => console.log(err));\n  };\n  \n  export const getUserData = (userHandle) => (dispatch) => {\n    dispatch({ type: LOADING_DATA });\n    axios\n      .get(`/user/${userHandle}`)\n      .then((res) => {\n        dispatch({\n          type: SET_SCREAMS,\n          payload: res.data.screams\n        });\n      })\n      .catch(() => {\n        dispatch({\n          type: SET_SCREAMS,\n          payload: null\n        });\n      });\n  };\n  \n  export const clearErrors = () => (dispatch) => {\n    dispatch({ type: CLEAR_ERRORS });\n  };\n  "]},"metadata":{},"sourceType":"module"}