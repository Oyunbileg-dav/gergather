{"ast":null,"code":"import { SET_POSTS, LOADING_DATA, DELETE_POST, SET_ERRORS, POST_POST, CLEAR_ERRORS, LOADING_UI, SET_POST, STOP_LOADING_UI } from '../reducers/types';\nimport axios from 'axios'; // Get all POSTs\n\nexport const getPosts = () => dispatch => {\n  dispatch({\n    type: LOADING_DATA\n  });\n  axios.get('/posts/:board').then(res => {\n    dispatch({\n      type: SET_POSTS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: SET_POSTS,\n      payload: []\n    });\n  });\n};\nexport const getPost = postId => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.get(`/post/${postId}`).then(res => {\n    dispatch({\n      type: SET_POST,\n      payload: res.data\n    });\n    dispatch({\n      type: STOP_LOADING_UI\n    });\n  }).catch(err => console.log(err));\n}; // Post a post\n\nexport const postPost = newPost => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.post('/post', newPost).then(res => {\n    dispatch({\n      type: POST_POST,\n      payload: res.data\n    });\n    dispatch(clearErrors());\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const deletePost = postId => dispatch => {\n  axios.delete(`/post/${postId}`).then(() => {\n    dispatch({\n      type: DELETE_POST,\n      payload: postId\n    });\n  }).catch(err => console.log(err));\n};\nexport const getUserData = userHandle => dispatch => {\n  dispatch({\n    type: LOADING_DATA\n  });\n  axios.get(`/user/${userHandle}`).then(res => {\n    dispatch({\n      type: SET_POSTS,\n      payload: res.data.posts\n    });\n  }).catch(() => {\n    dispatch({\n      type: SET_POSTS,\n      payload: null\n    });\n  });\n};\nexport const clearErrors = () => dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"sources":["/Users/oyunbilegdavaanyam/Desktop/act2021-team3/src/redux/actions/dataActions.js"],"names":["SET_POSTS","LOADING_DATA","DELETE_POST","SET_ERRORS","POST_POST","CLEAR_ERRORS","LOADING_UI","SET_POST","STOP_LOADING_UI","axios","getPosts","dispatch","type","get","then","res","payload","data","catch","err","getPost","postId","console","log","postPost","newPost","post","clearErrors","response","deletePost","delete","getUserData","userHandle","posts"],"mappings":"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","sourcesContent":["import {\n    SET_POSTS,\n    LOADING_DATA,\n    DELETE_POST,\n    SET_ERRORS,\n    POST_POST,\n    CLEAR_ERRORS,\n    LOADING_UI,\n    SET_POST,\n    STOP_LOADING_UI\n  } from '../reducers/types';\n  import axios from 'axios';\n  \n  // Get all POSTs\n  export const getPosts = () => (dispatch) => {\n    dispatch({ type: LOADING_DATA });\n    axios\n      .get('/posts/:board')\n      .then((res) => {\n        dispatch({\n          type: SET_POSTS,\n          payload: res.data\n        });\n      })\n      .catch((err) => {\n        dispatch({\n          type: SET_POSTS,\n          payload: []\n        });\n      });\n  };\n  export const getPost = (postId) => (dispatch) => {\n    dispatch({ type: LOADING_UI });\n    axios\n      .get(`/post/${postId}`)\n      .then((res) => {\n        dispatch({\n          type: SET_POST,\n          payload: res.data\n        });\n        dispatch({ type: STOP_LOADING_UI });\n      })\n      .catch((err) => console.log(err));\n  };\n  // Post a post\n  export const postPost = (newPost) => (dispatch) => {\n    dispatch({ type: LOADING_UI });\n    axios\n      .post('/post', newPost)\n      .then((res) => {\n        dispatch({\n          type: POST_POST,\n          payload: res.data\n        });\n        dispatch(clearErrors());\n      })\n      .catch((err) => {\n        dispatch({\n          type: SET_ERRORS,\n          payload: err.response.data\n        });\n      });\n  };\n  \n  export const deletePost = (postId) => (dispatch) => {\n    axios\n      .delete(`/post/${postId}`)\n      .then(() => {\n        dispatch({ type: DELETE_POST, payload: postId });\n      })\n      .catch((err) => console.log(err));\n  };\n  \n  export const getUserData = (userHandle) => (dispatch) => {\n    dispatch({ type: LOADING_DATA });\n    axios\n      .get(`/user/${userHandle}`)\n      .then((res) => {\n        dispatch({\n          type: SET_POSTS,\n          payload: res.data.posts\n        });\n      })\n      .catch(() => {\n        dispatch({\n          type: SET_POSTS,\n          payload: null\n        });\n      });\n  };\n  \n  export const clearErrors = () => (dispatch) => {\n    dispatch({ type: CLEAR_ERRORS });\n  };\n  "]},"metadata":{},"sourceType":"module"}